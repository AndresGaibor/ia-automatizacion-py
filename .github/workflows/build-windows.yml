name: build-windows

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # necesario para crear/releases

jobs:
  build-online:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install -U pip wheel
          if (Test-Path requirements.txt) {
            python -m pip install -r requirements.txt
          }
          python -m pip install pyinstaller playwright

      - name: Clean previous builds and spec files
        shell: pwsh
        run: |
          if (Test-Path build) { Remove-Item -Recurse -Force build }
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          if (Get-ChildItem -Filter *.spec -ErrorAction SilentlyContinue) { Remove-Item -Force *.spec }

      - name: Build (onefile)
        shell: pwsh
        run: pyinstaller --onefile --collect-all playwright app.py

      - name: Upload artifact (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: app-win
          path: dist/app.exe
          if-no-files-found: error
          retention-days: 14

      # Opcional: renombrar con la versi√≥n del tag
      - name: Rename binary with tag
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: Copy-Item dist/app.exe "dist/Automation-win-${{ github.ref_name }}.exe"

      # Publicar en GitHub Releases cuando sea un tag v*
      - name: Publish Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/Automation-win-${{ github.ref_name }}.exe
          fail_on_unmatched_files: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}